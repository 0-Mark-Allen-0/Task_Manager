generator client {
  provider = "prisma-client-js"
  // output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Introducing new fields and models to support the Prisma Adapter for NextAuth users
model User {
  id    String @id @default(cuid())
  name           String?
  email          String @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  tasks          Task[]
}

//New Models - Account, Session, Verification - Lifted straight from the Prisma Adapter in NextAuth docs
model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id        String   @id @default(cuid())
  title     String
  priority  String
  completed Boolean  @default(false)
  dueDate   DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}
